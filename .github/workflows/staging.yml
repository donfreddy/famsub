name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering from GitHub UI

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.changes.outputs.api }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: 📂 Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: 'main'
          filters: |
            api:
            - 'apps/api/**'
            - 'packages/**'
            - '.github/workflows/staging.yml'

  build-and-push-api-image:
    name: 🐳 Build & Push API Docker image
    needs: detect-changes
    if: needs.detect-changes.outputs.api == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v5

      - name: 🔄 Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 🏷️ Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/api
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Famsub API
            org.opencontainers.image.description=Rest API for Famsub platform
            org.opencontainers.image.url=https://famsub.com

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: 📬 Notify Portainer of new image
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"status": "success", "message": "Image successfully built and pushed"}' \
            https://portainer.famsub.com/api/webhooks/97045298-2e95-4668-ac55-892d5cd3dcd4